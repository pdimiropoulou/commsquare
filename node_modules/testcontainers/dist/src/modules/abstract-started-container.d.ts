/// <reference types="node" />
import { RestartOptions, StartedTestContainer, StopOptions, StoppedTestContainer } from "../test-container";
import { ExecResult, Labels } from "../docker/types";
import { Readable } from "stream";
export declare class AbstractStartedContainer implements StartedTestContainer {
    protected readonly startedTestContainer: StartedTestContainer;
    constructor(startedTestContainer: StartedTestContainer);
    protected containerStopping?(): Promise<void>;
    stop(options?: Partial<StopOptions>): Promise<StoppedTestContainer>;
    protected containerStopped?(): Promise<void>;
    restart(options?: Partial<RestartOptions>): Promise<void>;
    getHost(): string;
    getFirstMappedPort(): number;
    getMappedPort(port: number): number;
    getName(): string;
    getLabels(): Labels;
    getId(): string;
    getNetworkNames(): string[];
    getNetworkId(networkName: string): string;
    getIpAddress(networkName: string): string;
    exec(command: string[]): Promise<ExecResult>;
    logs(): Promise<Readable>;
}
