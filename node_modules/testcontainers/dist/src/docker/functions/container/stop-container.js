"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.stopContainer = void 0;
const logger_1 = require("../../../logger");
const stopContainer = (container, options) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        yield container.stop({ t: options.timeout / 1000 });
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
    }
    catch (err) {
        if (err.statusCode === 304) {
            logger_1.log.info(`Container has already been stopped`, { containerId: container.id });
        }
        else {
            logger_1.log.error(`Failed to stop container: ${err}`, { containerId: container.id });
            throw err;
        }
    }
});
exports.stopContainer = stopContainer;
