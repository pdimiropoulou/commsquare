"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.attachContainer = void 0;
const demux_stream_1 = require("../demux-stream");
const logger_1 = require("../../../logger");
const attachContainer = (dockerode, container) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const stream = (yield container.attach({ stream: true, stdout: true, stderr: true }));
        return (0, demux_stream_1.demuxStream)(dockerode, stream);
    }
    catch (err) {
        logger_1.log.error(`Failed to attach to container: ${err}`, { containerId: container.id });
        throw err;
    }
});
exports.attachContainer = attachContainer;
